Please answer the below core-java Questions:


What jdk contains or composed of and define each components?
Ans: Components of JDK (Java Development Kit) are:
     1.Java Compiler – Java Compiler is used to compile java files. Java Compiler component of JDK (Java Development
     Kit) is accessed using “javac” command.
     2. Java Interpreter – Java Interpreter is used to interpret the java files that are compiled by Java Compiler. Java
     Interpreter component of JDK (Java Development Kit) is accessed using “java” command.
     3. Java Disassembler ­ Java Disassembler is used to disassemble Java class file. Java Disassembler component of
     JDK (Java Development Kit) is accessed using “javap” command.
     4. Java Header File Generator ­ Java Header File Generator is used to generate C language header files and source files
     to implement the native methods. Java Header File Generator component of JDK (Java Development Kit) is accessed
     using “javah” command.
     5. Java Documentation – Java Documentation is required for easy maintenance of code. Java Documentation
     component of JDK (Java Development Kit) is accessed using “javadoc” command.
     6. Java Debugger – Java Debugger is used to debug the java files. Java Debugger component of JDK (Java
     Development Kit) is accessed using “jdb” command.
     7.Java Applet Viewer – Java Applet Viewer is used to view the Java Applets. Java Applet Viewer component of JDK
     (Java Development Kit) is accessed using “appletviewer” command.

What is IDE?
Ans: Integrated development environment (IDE) is a software application that provides comprehensive facilities to
    computer programmers for software development. An IDE normally consists of a source code editor, build automation tools
    and a debugger.


What are the IDEs available in the market to support java?
Ans: NetBeans,  Eclips, IntelliJ, BlueJ, Jedit.

Explain the entire java life cycle.
Ans: 1.A Java program is written using either a Text Editor like Textpad or an IDE like Eclipse and is saved as a .java file. (Program.java)
     2.The .java file is then compiled using Java compiler and a .class file is obtained from it. (Program.class)
     3.The .class file is now portable and can be used to run this Java program in any platform.
     4.Class file (Program.class) is interpreted by the JVM installed on a particular platform. JVM is part of the JRE software.

what is class?
Ans: A class is nothing but a blueprint or a template for creating different objects which defines its properties and behaviors.
    Java class objects exhibit the properties and behaviors defined by its class. A class can contain fields and methods to
    describe the behavior of an object.

What is object?
Ans: An object is an instance of a class.

What is the entry point of an application?
Ans: The main method is the entry point of a Java application.

Why main is static?
Ans: Since the main method is static, JVM can call it without creating any instance of a class which contains the main method.

What is the difference between an Interface and Abstract class?
Ans:1) Abstract class can have abstract and non-abstract methods.
    Interface can have only abstract methods.
    2) Abstract class doesn't support multiple inheritance.
    Interface supports multiple inheritance.
    3) Abstract class can have final, non-final, static and non-static variables.
    Interface has only static and final variables.
    4) Abstract class can have static methods, main method and constructor.
    Interface can't have static methods, main method or constructor.
    5) Abstract class can provide the implementation of interface.
    Interface can't provide the implementation of abstract class.
    6) The abstract keyword is used to declare abstract class.
    The interface keyword is used to declare interface.



Can you make an Object from an Interface and Abstract class ? if not how do you use it ?


what is Access Specifier?
Ans: Access specifiers are keywords in object-oriented languages that set the accessibility of
    classes, methods, and other members.

What is OOP ? Define each feature of java OOP.
Ans: Object-oriented programming (OOP) refers to a type of computer programming (software design) in which programmers
    define not only the data type of a data structure, but also the types of operations (functions) that can be applied to
    the data structure.

    Features of OOP:
    1.Abstraction: The process of picking out (abstracting) common features of objects and procedures.
    2.Encapsulation: The process of combining elements to create a new entity. A procedure is a type of encapsulation
        because it combines a series of computer instructions.
    3.Inheritance: a feature that represents the "is a" relationship between different classes.
    4.Polymorphism: A programming language's ability to process objects differently depending on their data type or class.

What is API? Name list of API that you have used so far.
Ans: Application program interface (API) is a set of routines, protocols, and tools for building software applications.
    An API specifies how software components should interact and APIs are used when programming graphical user
    interface (GUI) components.




Does java support multiple inheritance?
Ans: java doesn't support it. It is just to remove ambiguity, because multiple inheritance can cause ambiguity in
    few scenarios.

What is method overloading and when it happens?
Ans: Method Overloading is a feature that allows a class to have two or more methods having same name, if their argument
    lists are different. Overloading is being done in the same class and it happens at compile-time.

What is method overriding and when it happens?
Ans:If a derived class requires a different definition for an inherited method, then that method can be redefined in
    the derived class. This would be considered overriding. An overridden method would have the exact same method name,
    return type, number of parameters, and types of parameters as the method in the parent class, and the only difference
    would be the definition of the method.

Explain exceptions in java and how to handle it.
Ans:An Exception can be anything which interrupts the normal flow of the program. When an exception occurs program
    processing gets terminated and doesn’t continue further. In such cases we get a system generated error message.

    We can handle exception using Try-catch block. The try block contains a block of program statements within which an
    exception might occur. A try block is always followed by a catch block, which handles the exception that occurs in
    associated try block. A try block must followed by a Catch block or Finally block or both.

What is static keyword in java? How it has been used in variables and methods ?
Ans:The static keyword in java is used for memory management mainly. We can apply java static keyword with variables,
    methods, blocks and nested class. The static keyword belongs to the class than instance of the class.

    Static variables:If we declare any variable as static, it is known static variable. The static variable can be used
     to refer the common property of all objects.

What is final and how it has been used variables and methods?
Ans:In Java we use final keyword to variables to make its values not to be changed.

     Final variables are nothing but constants. We cannot change the value of a final variable once it is initialized.
     A final method cannot be overridden. Which means even though a sub class can call the final method of parent class
     without any issues but it cannot override it.

What is final, finally and finalize?
QAns: Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
       Finally is used to place important code, it will be executed whether exception is handled or not. Finalize is
       used to perform clean up processing just before object is garbage collected
What is a constructor ?
Ans: A constructor in Java is a block of code similar to a method that's called when an instance of an object is
     created. A constructor doesn't have a return type. The name of the constructor must be the same as the name of
     the class.
What is "this" keyword in java ?
Ans: Within an instance method or a constructor, 'this' is a reference to the current object.

What is "super" keyword in java?
Ans: It is used inside a sub-class method definition to call a method defined in the super class. Private methods of
     the super-class cannot be called. Only public and protected methods can be called by the super keyword.

What is JVM stand for ?
Ans: Java Virtual Machine.

What version of java are you using?
Ans:8.91 (64 bit)

What is JAR stand for ?
Ans: Java ARchive

What is compile time and run time?
Ans: The source code must be compiled into machine code in order to become and executable program. This compilation
    process is referred to as compile time. A compiled program can be opened and run by a user. When an application is
    running, it is called runtime.

What is heap?
Ans: The heap is the runtime data area from which memory for all class instances and arrays is allocated.

How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
Ans: String is immutable object means once created can not be changed.
    StringBuffer is mutable means one can change the value of the object . The object created through StringBuffer
    is stored in the heap . StringBuffer  has the same methods as the StringBuilder. Each method in StringBuffer
    is synchronized but StringBuilder is not synchronized.
